function c(e){const a=e.breakpointValues;if(!o(a)){const r=u(a),t=l(r);return Object.entries(t).map(([n,i])=>`--${e.propName}-${n}:${i}`).join(";")+";"}}function o(e){let a=!0;for(const r of e)if(r.value){a=!1;break}return a}function u(e){const a=[...e];for(let r=1;r<a.length;r++)a[r].value||(a[r].value=a[r-1].value);return a}function l(e){return e.reduce((a,r)=>Object.assign(Object.assign({},a),{[r.breakpointName]:r.value}),{})}function s(e){return[{breakpointName:"sm",value:e[0]},{breakpointName:"md",value:e[1]},{breakpointName:"lg",value:e[2]},{breakpointName:"xl",value:e[3]},{breakpointName:"xxl",value:e[4]}]}function f(e,a){if(!(!e||!a))return{propName:e,breakpointValues:s(a.split(","))}}export{c as a,f as c};
